# @(#) Loop over command-line options, searching for '--[no]help' option
#
# The Tools Project: a Tools System and Paradigm for IT Production
# Copyright (Â©) 2003-2021 Pierre Wieser (see AUTHORS)
#
# The Tools Project is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# The Tools Project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with The Tools Project; see the file COPYING. If not,
# see <http://www.gnu.org/licenses/>.
#
# Synopsis:
#
#   If the '--help' option is found, then the function display the
#   help of the command and the verb, and exit without returning to
#   the caller.
#
# (I): -
#
# (O): -
#
# pwi 2013- 2-18 creation
# pwi 2013- 6- 3 use the dynamic command-line interpretation
# pwi 2013- 7-15 review options dynamic computing
# pwi 2017- 6-21 publish the release at last
# pwi 2021-12-28 improve verbose execution
# pwi 2025- 2- 8 also print help if no argument at all on the verb

function optReadHelp
{
	if [ "${opt_help}" = "yes" -o ${ttp_args_argc} -eq 0 ]; then
		[ "${opt_help}" = "yes" ] && msgOut "'--help' option detected, other arguments are ignored"
		scriptUsage
		exit
	fi
}
