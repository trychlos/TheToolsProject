{
	"WS12PROD1": {
		"Services": {
			"Canal33": {
				"instance": "PROD",
				"databases": [
					"Canal33"
				],
				"workloads": {
					"canal33.live.morning": [
						{
							"label": "(Production Live) Sauvegarde quotidienne de la base Canall33",
							"commands": [
								"dbms.pl backup -nocolored -service Canal33 -full",
								"ttp.pl copydirs -nocolored -sourcecmd \"dbms.pl vars -nocolored -backupsDir\" -targetcmd \"dbms.pl vars -nocolored -archivesDir\" -dirs",
								"dbms.pl telemetry -nocolored -service Canal33 -dbsize",
								"dbms.pl telemetry -nocolored -service Canal33 -tabcount",
								"ttp.pl sizedir -nocolored -dirpath C:\\Users\\Public\\CANAL33_LOGS -mqtt -http"
							]
						}
					],
					"canal33.live.every.5h": [
						{
							"label": "(Production Live) Sauvegarde différentielle en journée",
							"commands_x": [
								"-> désactivée sur ns230134 faute d'espace disque suffisant",
								"dbms.pl backup -nocolored -service Canal33 -diff",
								"ttp.pl copydirs -nocolored -sourcecmd \"dbms.pl vars -nocolored -backupsDir\" -targetcmd \"dbms.pl vars -nocolored -archivesDir\" -dirs"
							]
						}
					],
					"canal33.live.evening": [
					],
					"canal33.backup": [
						{
							"label": "(PRODUCTION BACKUP) Surveillance, transfert et restauration des sauvegardes de la production",
							"commands": [
								"daemon.pl stop -nocolored -json [eval:File::Spec->catdir( $TTPVars->{config}{site}{daemonsDir}, 'canal33-backup-monitor-daemon.json' )] -ignore -wait 2",
								"daemon.pl start -nocolored -json [eval:File::Spec->catdir( $TTPVars->{config}{site}{daemonsDir}, 'canal33-backup-monitor-daemon.json' )] -- -remote NS230134"
							]
						}
					]
				},
				"status": {
					"commands": [
						"ssh inlingua-user@<HOST> dbms.pl status -nocolored -service <SERVICE> -state -mqtt -http",
						"ssh inlingua-user@<HOST> services.pl live -nocolored -service <SERVICE> -environment X -next -mqtt -http",
						"http.pl get -nocolored -url http://canal33.blingua.net -label service=<SERVICE> -nomqtt -http",
						"http.pl get -nocolored -url http://canal33.backup.blingua.net -label service=<SERVICE> -nomqtt -http",
						"http.pl get -nocolored -url https://c33.blingua.fr -label service=<SERVICE> -nomqtt -http",
						"http.pl get -nocolored -url https://c33.backup.blingua.net -label service=<SERVICE> -nomqtt -http",
						"ssh inlingua-user@<HOST> daemon.pl status -bname canal33-backup-monitor-daemon.json -http -- -metric ttp_service_daemon -label service=<SERVICE> -label role=backup -label environment=X"
					],
					"get_live": "http.pl get -nocolored -url http://canal33.blingua.net -header X-Sent-By -ignore"
				},
				"switch_comments": [
					"These commands have to be run when we want switch the status of a machine, from live to backup, or from backup to live",
					"They have to be run via 'SiteResources\\Commands\\extern_service_switch.pl' script."
				],
				"switch": {
					"to_backup": {
						"commands": [
							"ssh inlingua-adm@<HOST> sc stop Canal33Ftp",
							"ssh inlingua-adm@<HOST> sc config start= disabled Canal33Ftp",
							"ssh inlingua-adm@<HOST> sc stop Canal33Svc",
							"ssh inlingua-adm@<HOST> sc config start= disabled Canal33Svc"
						]
					},
					"to_live": {
						"commands": [
							"ssh inlingua-user@<HOST> daemon.pl stop -nocolored -json [eval:File::Spec->catdir( $TTPVars->{config}{site}{daemonsDir}, 'canal33-backup-monitor-daemon.json' )] -ignore -wait 2",
							"ssh inlingua-adm@<HOST> [eval:File::Spec->catdir( $TTPVars->{config}{site}{commandsDir}, 'scheduled_set_status.cmd' )] \\Inlingua\\canal33.backup /Disable",
							"ssh inlingua-adm@<HOST> sc config start= auto Canal33Ftp",
							"ssh inlingua-adm@<HOST> sc start Canal33Ftp",
							"ssh inlingua-adm@<HOST> sc config start= auto Canal33Svc",
							"ssh inlingua-adm@<HOST> sc start Canal33Svc",
							"ovh.pl ipswitch -ip ip-87.98.189.58 -to ns3153065.ip-51-91-25.eu -wait -url http://canal33.blingua.net"
						]
					}
				}
			},
			"Technical.Services": {
				"hidden": true,
				"workloads": {
					"daily.morning": [
						{
							"label": "Purge backups directory",
							"order": "00",
							"order_comments": [
								"ns230134 has very low free space on its local disk, just enough for one backup set, not two.",
								"Make sure the SQLBackups is empty before our daily full backups. It will be immediately copied to the archive, and moved again to the archive at evening."
							],
							"commands": [
								"ttp.pl pull -nocolored",
								"ttp.pl purgedirs -nocolored -dircmd \"dbms.pl vars -nocolored -backupsRoot\" -keep 1",
								"ttp.pl purgedirs -nocolored -dircmd \"dbms.pl vars -nocolored -archivesRoot\" -keep 5",
								"ttp.pl purgedirs -nocolored -dircmd \"ttp.pl vars -nocolored -logsRoot\" -keep 7"
							]
						},
						{
							"label": "Do something at the end of the daily.morning workload",
							"order": "zz",
							"commands": [
							]
						}
					],
					"daily.evening": [
						{
							"label": "Do something at the evening",
							"commands": [
							]
						}
					],
					"startup": [
						{
							"label": "Advertize at startup",
							"commands": [
								"call [eval:File::Spec->catdir( $TTPVars->{config}{site}{commandsDir}, 'startup.cmd' )]"
							]
						}
					]
				}
			}
		},
		"DBMSInstancesComments": [
		],
		"DBMSInstances": {
			"PROD": {
				"package": "Mods::SqlServer",
				"dataPath": "C:\\Program Files\\Microsoft SQL Server\\MSSQL11.PROD\\MSSQL\\DATA"
			}
		},
		"DBMS": {
			"archivesDir": "[eval:File::Spec->catdir( Mods::Path::dbmsArchivesRoot(), localtime->strftime( '%y%m%d' ))]",
			"archivesRoot": "\\[eval:File::Spec->catdir( '\\ftpback-rbx7-618.ovh.net', 'ns3153065.ip-51-91-25.eu', '<HOST>', 'SQLBackups' )]"
		},
		"Environment": {
			"type_comments": [
				"X is production; this same indicator must be used both for production live and for production backup",
				"D is for development"
			],
			"type": "X"
		},
		"remoteShare": "\\\\10.122.1.13\\C"
	}
}
