{
	"ServicesComments": [
		"SQL Server message 1844, Severity 16, State 1, Server NS3232346",
		"L'instruction BACKUP DATABASE WITH COMPRESSION n'est pas prise en charge sur Web Edition (64-bit)."
	],
	"Services": {
		"Tom17": {
			"databases": [
				"inlingua17a"
			],
			"workloads": {
				"tom17.live.morning": [
					{
						"label": "(Production Live) Sauvegarde quotidienne de la base de données Tom17",
						"commands": [
							"dbms.pl backup -nocolored -service Tom17 -full",
							"dbms.pl telemetry -nocolored -service Tom17 -dbsize",
							"dbms.pl telemetry -nocolored -service Tom17 -tabcount"
						]
					}
				],
				"tom17.live.every.2h": [
					{
						"label": "(Production Live) Sauvegarde différentielle sur la base de données Tom17",
						"commands": [
							"dbms.pl backup -nocolored -service Tom17 -diff"
						]
					}
				],
				"tom17.live.evening": [
				],
				"tom17.backup": [
					{
						"label": "(PROD BACKUP) Surveillance, transfert et restauration des sauvegardes de la production",
						"commands": [
							"daemon.pl stop -nocolored -json [eval:File::Spec->catfile( $TTPVars->{config}{site}{daemonsDir}, 'tom17-backup-monitor-daemon.json' )] -ignore -wait",
							"daemon.pl start -nocolored -json [eval:File::Spec->catfile( $TTPVars->{config}{site}{daemonsDir}, 'tom17-backup-monitor-daemon.json' )] -- -remote WS22PROD1"
						]
					}
				]
			},
			"status": {
				"commands": [
					"ssh inlingua-user@<HOST> dbms.pl status -nocolored -service <SERVICE> -state -mqtt -http",
					"services.pl live -nocolored -service <SERVICE> -environment X -next -mqtt -http",
					"http.pl get -nocolored -url https://tom17.blingua.fr -label service=<SERVICE> -accept [1-3].. -mqtt -http",
					"http.pl get -nocolored -url https://inlingua17.blingua.fr -label service=<SERVICE> -accept [1-3].. -mqtt -http",
					"http.pl get -nocolored -url https://tom17.backup.blingua.fr -label service=<SERVICE> -accept [1-3].. -mqtt -http",
					"ssh inlingua-user@<HOST> daemon.pl status -bname tom17-backup-monitor-daemon.json -http -- -metric ttp_service_daemon -label service=<SERVICE> -label role=backup -label environment=X"
				],
				"get_live": "http.pl get -nocolored -url https://tom17.blingua.fr -header X-Sent-By -accept ..."
			},
			"switch_comments": [
				"These commands have to be run when we want switch the status of a machine, from live to backup, or from backup to live",
				"They have to be run via 'SiteResources\\Commands\\extern_service_switch.pl' script."
			],
			"switch": {
				"to_backup": {
				},
				"to_live": {
					"commands": [
						"ssh inlingua-user@<HOST> daemon.pl stop -nocolored -json [eval:File::Spec->catfile( $TTPVars->{config}{site}{daemonsDir}, 'tom17-backup-monitor-daemon.json' )] -ignore -wait",
						"ssh inlingua-adm@<HOST> [eval:File::Spec->catfile( $TTPVars->{config}{site}{commandsDir}, 'scheduled_set_status.cmd' )] \\Inlingua\\tom17.backup /Disable"
					]
				}
			}
		},
		"Tom21": {
			"databases": [
				"inlingua21"
			],
			"workloads": {
				"tom21.live.morning": [
					{
						"label": "(Production Live) Sauvegarde quotidienne de la base de données Tom21",
						"commands": [
							"dbms.pl backup -nocolored -service Tom21 -full",
							"dbms.pl telemetry -nocolored -service Tom21 -dbsize",
							"dbms.pl telemetry -nocolored -service Tom21 -tabcount"
						]
					}
				],
				"tom21.live.every.2h": [
					{
						"label": "(Production Live) Sauvegarde différentielle sur la base de données Tom21",
						"commands": [
							"dbms.pl backup -nocolored -service Tom21 -diff"
						]
					}
				],
				"tom21.live.evening": [
				],
				"tom21.backup": [
					{
						"label": "(PROD BACKUP) Surveillance, transfert et restauration des sauvegardes de la production",
						"commands": [
							"daemon.pl stop -nocolored -json [eval:File::Spec->catfile( $TTPVars->{config}{site}{daemonsDir}, 'tom21-backup-monitor-daemon.json' )] -ignore -wait",
							"daemon.pl start -nocolored -json [eval:File::Spec->catfile( $TTPVars->{config}{site}{daemonsDir}, 'tom21-backup-monitor-daemon.json' )] -- -remote WS22PROD1"
						]
					}
				]
			},
			"status": {
				"commands": [
					"ssh inlingua-user@<HOST> dbms.pl status -nocolored -service <SERVICE> -state -mqtt -http",
					"services.pl live -nocolored -service <SERVICE> -environment X -next -mqtt -http",
					"http.pl get -nocolored -url https://tom21.blingua.fr -label service=<SERVICE> -accept [1-3].. -mqtt -http",
					"http.pl get -nocolored -url https://inlingua21.blingua.fr -label service=<SERVICE> -accept [1-3].. -mqtt -http",
					"http.pl get -nocolored -url https://tom21.backup.blingua.fr -label service=<SERVICE> -accept [1-3].. -mqtt -http",
					"ssh inlingua-user@<HOST> daemon.pl status -bname tom21-backup-monitor-daemon.json -http -- -metric ttp_service_daemon -label service=<SERVICE> -label role=backup -label environment=X"
				],
				"get_live": "http.pl get -nocolored -url https://tom21.blingua.fr -header X-Sent-By -accept ..."
			},
			"switch_comments": [
				"These commands have to be run when we want switch the status of a machine, from live to backup, or from backup to live",
				"They have to be run via 'SiteResources\\Commands\\extern_service_switch.pl' script."
			],
			"switch": {
				"to_backup": {
				},
				"to_live": {
					"commands": [
						"ssh inlingua-user@<HOST> daemon.pl stop -nocolored -json [eval:File::Spec->catfile( $TTPVars->{config}{site}{daemonsDir}, 'tom21-backup-monitor-daemon.json' )] -ignore -wait",
						"ssh inlingua-adm@<HOST> [eval:File::Spec->catfile( $TTPVars->{config}{site}{commandsDir}, 'scheduled_set_status.cmd' )] \\Inlingua\\tom21.backup /Disable"
					]
				}
			}
		},
		"Tom59": {
			"databases": [
				"TOM59331"
			],
			"workloads": {
				"tom59.live.morning": [
					{
						"label": "(Production Live) Sauvegarde quotidienne de la base de données Tom59",
						"commands": [
							"dbms.pl backup -nocolored -service Tom59 -full",
							"dbms.pl telemetry -nocolored -service Tom59 -dbsize",
							"dbms.pl telemetry -nocolored -service Tom59 -tabcount"
						]
					}
				],
				"tom59.live.every.2h": [
					{
						"label": "(Production Live) Sauvegarde différentielle sur la base de données Tom59",
						"commands": [
							"dbms.pl backup -nocolored -service Tom59 -diff"
						]
					}
				],
				"tom59.live.evening": [
				],
				"tom59.backup": [
					{
						"label": "(PRODUCTION BACKUP) Surveillance, transfert et restauration des sauvegardes de la production",
						"commands": [
							"daemon.pl stop -nocolored -json [eval:File::Spec->catfile( $TTPVars->{config}{site}{daemonsDir}, 'tom59-backup-monitor-daemon.json' )] -ignore -wait",
							"daemon.pl start -nocolored -json [eval:File::Spec->catfile( $TTPVars->{config}{site}{daemonsDir}, 'tom59-backup-monitor-daemon.json' )] -- -remote WS22PROD1"
						]
					}
				]
			},
			"status": {
				"commands": [
					"ssh inlingua-user@<HOST> dbms.pl status -nocolored -service <SERVICE> -state -mqtt -http",
					"services.pl live -nocolored -service <SERVICE> -environment X -next -mqtt -http",
					"http.pl get -nocolored -url https://tom59.blingua.fr -label service=<SERVICE> -accept [1-3].. -mqtt -http",
					"http.pl get -nocolored -url https://inlingua31.archive.blingua.fr -label service=<SERVICE> -accept [1-3].. -mqtt -http",
					"http.pl get -nocolored -url https://inlingua33.archive.blingua.fr -label service=<SERVICE> -accept [1-3].. -mqtt -http",
					"http.pl get -nocolored -url https://inlingua59.archive.blingua.fr -label service=<SERVICE> -accept [1-3].. -mqtt -http",
					"http.pl get -nocolored -url https://tom59.backup.blingua.fr -label service=<SERVICE> -accept [1-3].. -mqtt -http",
					"ssh inlingua-user@<HOST> daemon.pl status -bname tom59-backup-monitor-daemon.json -http -- -metric ttp_service_daemon -label service=<SERVICE> -label role=backup -label environment=X"
				],
				"get_live": "http.pl get -nocolored -url https://tom59.blingua.fr -header X-Sent-By -accept ..."
			},
			"switch_comments": [
				"These commands have to be run when we want switch the status of a machine, from live to backup, or from backup to live",
				"They have to be run via 'SiteResources\\Commands\\extern_service_switch.pl' script."
			],
			"switch": {
				"to_backup": {
				},
				"to_live": {
					"commands": [
						"ssh inlingua-user@<HOST> daemon.pl stop -nocolored -json [eval:File::Spec->catfile( $TTPVars->{config}{site}{daemonsDir}, 'tom59-backup-monitor-daemon.json' )] -ignore -wait",
						"ssh inlingua-adm@<HOST> [eval:File::Spec->catfile( $TTPVars->{config}{site}{commandsDir}, 'scheduled_set_status.cmd' )] \\Inlingua\\tom59.backup /Disable"
					]
				}
			}
		},
		"Technical.Services": {
			"hidden": true,
			"workloads": {
				"daily.morning": [
					{
						"label": "Purge daily directories",
						"order": "00",
						"commands": [
							"ttp.pl pull -nocolored",
							"ttp.pl copydirs -nocolored -sourcecmd \"dbms.pl vars -nocolored -backupsDir\" -targetcmd \"dbms.pl vars -nocolored -archivesDir\" -dirs",
							"ttp.pl purgedirs -nocolored -dircmd \"dbms.pl vars -nocolored -backupsRoot\" -keep 5",
							"ttp.pl purgedirs -nocolored -dircmd \"dbms.pl vars -nocolored -archivesRoot\" -keep 10",
							"ttp.pl purgedirs -nocolored -dircmd \"ttp.pl vars -nocolored -logsRoot\" -keep 10"
						]
					}
				],
				"daily.evening": [
					{
						"label": "Update our scrips and resources",
						"commands": [
						]
					}
				],
				"startup": [
					{
						"label": "Advertize at startup",
						"commands": [
							"call [eval:File::Spec->catfile( $TTPVars->{config}{site}{commandsDir}, 'startup.cmd' )]"
						]
					}
				]
			}
		}
	},
	"DBMS": {
		"archivesDir": "[eval:File::Spec->catdir( Mods::Path::dbmsArchivesRoot(), localtime->strftime( '%y%m%d' ))]",
		"archivesRoot": "\\[eval:File::Spec->catdir( '\\ftpback-rbx7-618.ovh.net', 'ns3153065.ip-51-91-25.eu', '<HOST>', 'SQLBackups' )]",
		"byInstance": {
			"MSSQLSERVER": {
				"dataPath": "C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\DATA"
			}
		}
	},
	"Environment": {
		"type": "X"
	},
	"remoteShare": "\\\\ns3232346.ovh.net\\C"
}
