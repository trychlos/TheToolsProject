{
	"DBMS_comments": [
	],
	"DBMS": {
		"archivesDir": "[eval:File::Spec->catdir( TTP::var([ 'DBMS', 'archivesRoot' ]), localtime->strftime( '%y%m%d' ))]",
		"archivesRoot": "\\[eval:File::Spec->catdir( '\\ftpback-rbx2-207.ovh.net', 'ns3197235.ip-141-95-3.eu', '<NODE>', 'SQLBackups' )]",
		"byInstance": {
			"PROD": {
				"dataPath": "C:\\Program Files\\Microsoft SQL Server\\MSSQL16.PROD\\MSSQL\\DATA",
				"package": "TTP::SqlServer"
			}
		},
		"instance": "PROD"
	},
	"ServicesComments": [
	],
	"Services": {
		"Tom17": {
			"status": {
				"monitor": {
					"commands": [
						"dbms.pl status -nocolored -service <SERVICE> -state -mqtt -http",
						"daemon.pl status -name tom17-backup-monitor-daemon -http -label service=<SERVICE> -label role=backup -label environment=<ENVIRONMENT>"
					]
				}
			},
			"workloads": {
				"tom17.backup": [
					{
						"label": "(PROD BACKUP) Surveillance, transfert et restauration des sauvegardes de la production",
						"commands": [
							"daemon.pl stop -nocolored -name tom17-backup-monitor-daemon -ignore -wait",
							"daemon.pl start -nocolored -name tom17-backup-monitor-daemon -- -remote WS22PROD2"
						]
					}
				]
			}
		},
		"Tom21": {
			"status": {
				"monitor": {
					"commands": [
						"dbms.pl status -nocolored -service <SERVICE> -state -mqtt -http",
						"daemon.pl status -name tom21-backup-monitor-daemon -http -label service=<SERVICE> -label role=backup -label environment=<ENVIRONMENT>"
					]
				}
			},
			"workloads": {
				"tom21.backup": [
					{
						"label": "(PROD BACKUP) Surveillance, transfert et restauration des sauvegardes de la production",
						"commands": [
							"daemon.pl stop -nocolored -name tom21-backup-monitor-daemon -ignore -wait",
							"daemon.pl start -nocolored -name tom21-backup-monitor-daemon -- -remote WS22PROD2"
						]
					}
				]
			}
		},
		"Tom59": {
			"status": {
				"monitor": {
					"commands": [
						"dbms.pl status -nocolored -service <SERVICE> -state -mqtt -http",
						"daemon.pl status -name tom59-backup-monitor-daemon -http -label service=<SERVICE> -label role=backup -label environment=<ENVIRONMENT>"
					]
				}
			},
			"workloads": {
				"tom59.backup": [
					{
						"label": "(PRODUCTION BACKUP) Surveillance, transfert et restauration des sauvegardes de la production",
						"commands": [
							"ttp.pl purgedirs -nocolored -dircmd \"dbms.pl vars -nocolored -backupsRoot\" -keep 4",
							"daemon.pl stop -nocolored -name tom59-backup-monitor-daemon -ignore -wait",
							"daemon.pl start -nocolored -name tom59-backup-monitor-daemon -- -remote WS22PROD2"
						]
					}
				]
			}
		},
		"Technical.Services": {
			"hidden": true,
			"workloads": {
				"daily.morning": [
					{
						"label": "Purge daily directories",
						"order": "00",
						"commands": [
							"ttp.pl pull -nocolored",
							"ttp.pl movedirs -nocolored -sourcecmd \"dbms.pl vars -nocolored -backupsRoot\" -targetcmd \"dbms.pl vars -nocolored -archivesRoot\" -dirs -keep 4 -nomakeDir",
							"ttp.pl purgedirs -nocolored -dircmd \"dbms.pl vars -nocolored -archivesRoot\" -keep 10",
							"ttp.pl purgedirs -nocolored -dircmd \"ttp.pl vars -nocolored -logsRoot\" -keep 10",
							"daemon.pl stop -nocolored -name node-monitor-daemon -ignore -wait",
							"daemon.pl start -nocolored -name node-monitor-daemon"
						]
					}
				],
				"daily.evening": [
					{
						"label": "Update our scrips and resources",
						"commands": [
						]
					}
				],
				"startup": [
					{
						"label": "Advertize at startup",
						"commands": [
							"call [eval:File::Spec->catfile( TTP::var([ 'site', 'commandsDir' ]), 'startup.cmd' )]",
							"daemon.pl start -nocolored -name node-monitor-daemon"
						]
					}
				]
			}
		}
	},
	"Environment": {
		"type": "X",
		"physical": {
			"ovh": "ns3153065.ovh.net",
			"inlingua": "inlingua-rl9-1"
		}
	},
	"remoteShare": "\\\\WS22PROD1\\C"
}
