{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "org.trychlos.TheToolsProject/schemas/service.schema.json",
    "title": "Service",
    "description_array": [
		"The '<service>.json' configuration file is the per-service configuration file for TheToolsProject. Each involved service can have its own <service>.json configuration file.",
		"It is searched for among the site-defined 'services.confDirs' directories, which defaults to 'etc/services/<service>.json', in each path of TTP_ROOTS environment variable.",
		"The first found wins.",
        "",
        "Common configuration options of each service should be written in this <service>.json file.",
        "",
        "Each service can freely define a set of commands to be executed in various situations, and set them in a free configuration hierarchy.",
        "For example, you can:",
        "- define a set of monitoring commands in a - say - 'status.monitor' configuration:",
        "  \"status\": {",
        "    \"monitor\": {",
        "      \"commands\": [",
        "        ...",
        "      ]",
        "    }",
        "  }",
        "  and then execute them with 'services.pl commands -service <SERVICE> -key status,monitor'",
        "- or define a set of start/stop commands in - say - 'run.start' and 'run.stop' configurations:",
        "  \"run\": {",
        "    \"start\": {",
        "      \"commands\": [",
        "        ...",
        "      ]",
        "    },",
        "    \"stop\": {",
        "      \"commands\": [",
        "        ...",
        "      ]",
        "    }",
        "  }",
        "  and then execute them with 'services.pl commands -service <SERVICE> -key run,start' (resp. 'run,stop').",
        "What is important here and to be kept in mind is that these configuration options MUST always end with the 'commands' array, which itself satisfies to the usual string or byOS object.",
        "This way, TTP can adapt to almost any situation.",
		"",
		"Windows notes:",
		"- Take care of doubling your backslashes",
		"",
		"Dynamic values:",
		" May make use - in values only - of parameters between square brackets as [eval:...]",
		" 'eval' may be prefixed with an underscore in order to delay the eval (e.g. if it refers to another dynamic variable which needs to be resolved first).",
        "",
        "Unless otherwise specified, below values take their default value first from <node>.json, then from this <service>.json and last from global site.json.",
        "Most of commands here accept a <SERVICE> macro which is evaluated as the name of the service."
    ],
    "type": "object",
    "properties": {
        "DBMS": {
            "description": "The DBMS description part of the service.",
            "type": "object",
            "properties": {
                "databases": {
                    "description": "The list of databases we are limited to view for this service in the DBMS server.",
                    "type": "array",
                    "items": "string",
                    "default": "the_full_list_of_databases"
                },
                "excludeSystemDatabases": {
                    "description": "Whether listing databases should exclude system databases.",
                    "type": "boolean",
                    "default": true
                },
                "host": {
                    "description": "The address name or IP, possibly with a colon and a port number, of the DBMS server, or a full connection string.",
                    "type": "string",
                    "default": "localhost"
                },
                "package": {
                    "description": "The Perl TTP package to be use'd when working with this DBMS service.",
                    "type": "string",
                    "default": ""
                },
                "wantsLocal": {
                    "description": "Whether this DBMS instance is bound only to local connections.",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "enabled": {
            "description": "Whether this JSON configuration must be considered.",
            "type": "boolean",
            "default": true
        },
        "hidden": {
            "description": "Whether this service is hidden from 'services.pl list --services' command result.",
            "type": "boolean",
            "default": false
        },
        "warnOnMultipleHostingNodes": {
            "description_array": [
                "Whether we should emit a warning when several nodes are hosting candidates for the service.",
                "Though this is rather a site-level property, this is nonetheless overridable on a per-node or per-service basis.",
                "Hence this property in this schema."
            ],
            "type": "boolean",
            "default": "true"
        },
        "workloads": {
            "description_array": [
                "The configuration of each workload this service subscribes to.",
                "Each item is an ordered list of task to be executed for the service.",
                "As several services can subscribe to the same workload, we build this way a full ordered list of tasks to be executed.",
                "The built list of tasks is ordered by the 'order' key, defaulting to the service name."
            ],
            "type": "array",
            "items": "object",
            "patternProperties": {
                "^.*$": {
                    "description": "The workload name.",
                    "type": "string"
                }
            },
            "properties": {
                "hidden": {
                    "description": "Whether this workload is hidden from 'services.pl list --workloads' command result.",
                    "type": "boolean",
                    "default": false
                },
                "label": {
                    "description": "A descriptive label for this list of tasks",
                    "type": "string"
                },
                "order": {
                    "description": "The order of this list of tasks when building the full workload list of commands.",
                    "type": "string",
                    "default": "<SERVICE>"
                },
                "commands": {
                    "description": "The commands of the workload, either as strings or as by OS commands.",
                    "type": "array",
                    "items": [
                        "string",
                        "object"
                    ],
                    "properties": {
                        "byOS": {
                            "description": "Let a command be specific to the running OS.",
                            "type": "object",
                            "patternProperties": {
                                "^.*$": {
                                    "description_array": [
                                        "The OS name as reported by Perl-Config, the value being the command to be applied for this OS."
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
