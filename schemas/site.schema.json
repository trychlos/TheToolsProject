{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "org.trychlos.TheToolsProject/schemas/site.schema.json",
    "title": "Site",
    "description_array": [
		"The 'site.json' configuration file is the global TTP configuration file for your site, and the first loaded by each command. It defines global TTP behavior.",
		"It is searched for among (hardcoded) 'etc/ttp/site.json', 'etc/site.json', 'etc/ttp/toops.json' or 'etc/toops.json' in each path of TTP_ROOTS environment variable.",
		"The first found wins.",
		"",
		"Windows notes:",
		"- Take care of doubling your backslashes",
		"",
		"Dynamic values:",
		" May make use - in values only - of parameters between square brackets as [eval:...]",
		" 'eval' may be prefixed with an underscore in order to delay the eval (e.g. if it refers to another dynamic variable which needs to be resolved first).",
		"",
		"Site variables:",
		" The site integrator may use this same configuration file (and is encouraged to) to set his own site-level variables.",
		" These variables are free to the site integrator and NOT considered by TheToolsProject, though they can be used when evaluating dynamic values.",
		" Variables values can be accessed though TTP::var([ 'site', 'my', 'other', 'key' ]) the same way than TTP configuration variables.",
		" See below 'site' object.",
        "",
        "Unless otherwise specified, below values are overridable on a per-bode basis."
    ],
    "type": "object",
    "properties": {
        "enabled": {
            "description": "Whether this JSON configuration must be considered. Not per-node overridable.",
            "type": "boolean",
            "default": true
        },
        "site": {
            "description": "Site-specific variables. Structure and properties are free to the site integrator.",
            "type": "object"
        },
        "toops": {
            "description": "General configuration of the TTP behavior. Deprecated in favor of 'TTP' in v4.0.",
            "deprecated": true
        },
        "TTP": {
            "description": "General configuration of the TTP behavior",
            "type": "object",
            "properties": {
                "alerts": {
                    "description_array": [
                        "Configure here each medium which can be used to send alerts via 'ttp.pl alert'. All properties can be overriden on a per-node basis.",
                        "An alert has following properties:",
                        "- emitter: defaulting to the running node name",
                        "- level: defaulting to 'INFO'",
                        "- title: a single descriptive line",
                        "- message: a more complete alert content",
                        "- stamp: automatically added by the 'ttp.pl alert' command as an ISO 8601 date and time.",
                        "Media have common properties:",
                        "- enabled: whether this medium is enabled; will be fully ignored when disabled; defaulting to true (enabled).",
                        "- default: whether this medium is a default for 'ttp.pl alert' command; defaulting to true (default).",
                        "- command: either a single string, or an object 'command.byOS.<osname>; defaulting dependant of the exact used medium.",
                        "  Provided commands have access to <EMITTER>, <LEVEL>, <TITLE>, <MESSAGE>, <STAMP>, <OPTIONS> and <JSON> macros.",
                        "  The <JSON> macro is resolved with a stringified version of the alert JSON data.",
                        "When specifying a command, either a simple string or as a 'byOS' object, you should take care that the specified command will not",
                        "inherit of '--dummy' or '--verbose' options of the parent command. Be cautious about what you exactly want."
                    ],
                    "type": "object",
                    "properties": {
                        "withFile": {
                            "description": "Whether and how to create a JSON alert file.",
                            "type": "object",
                            "properties": {
                                "default": {
                                    "description": "Whether creating an alert file is a default of the 'ttp.pl alert' command.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "enabled": {
                                    "description": "Whether creating an alert file is an enabled capability of the site.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "command": {
                                    "description_array": [
                                        "The command to be used to create the JSON alert file.",
                                        "The default command creates an 'alert-yyyymmddhhmisscccccc.json' file in the drop directory."
                                    ],
                                    "type": [
                                        "string",
                                        "object"
                                    ],
                                    "default": "ttp.pl writejson into below dropDir"
                                },
                                "prettyJson": {
                                    "description": "Whether the JSON string should be prettified.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "dropDir": {
                                    "description_array": [
                                        "The directory where alert files must be created.",
                                        "Though the default is just the OS temporary directory, you, as a site administrator, should rather define a dedicated directory,",
                                        "so that you will be able to use the alerts-monitor-daemon to monitor the alerts."
                                    ],
                                    "type": "string",
                                    "default": "[eval:TTP::tempDir()]"
                                }
                            }
                        },
                        "withMqtt": {
                            "description": "Whether and how publish the alert on the MQTT bus.",
                            "type": "object",
                            "properties": {
                                "default": {
                                    "description": "Whether publishing alerts to MQTT is a default of the 'ttp.pl alert' command.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "enabled": {
                                    "description": "Whether publishing alerts to MQTT is an enabled capability of the site.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "command": {
                                    "description": "The command to be used to publish to the MQTT bus.",
                                    "type": [
                                        "string",
                                        "object"
                                    ],
                                    "default": "mqtt.pl publish -topic [eval:TTP::nodeName()]/alert -payload \"<JSON>\" <OPTIONS>"
                                },
                                "topic": {
                                    "description": "A command which echoes the topic on stdout.",
                                    "type": "string",
                                    "default": "[eval:TTP::nodeName()]/alerts/[eval:Time::Moment->from_string( <STAMP> )->epoch()]"
                                }
                            }
                        },
                        "withSms": {
                            "description": "Whether and how send the alert by SMS.",
                            "type": "object",
                            "properties": {
                                "default": {
                                    "description": "Whether publishing alerts by SMS is a default of the 'ttp.pl alert' command.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "enabled": {
                                    "description": "Whether publishing alerts by SMS is an enabled capability of the site.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "command": {
                                    "description_array": [
                                        "The command to be used to send the alert by SMS.",
                                        "The command has access to additional macros:",
                                        "- <RECIPIENTS> is resolved with a comma-separated list of the recipients,",
                                        "- <CONTENTFNAME> is the filename of a text file which contains the full message.",
                                        "No default command is provided as of v4.1"
                                    ],
                                    "type": [
                                        "string",
                                        "object"
                                    ]
                                },
                                "prettyJson": {
                                    "description": "Whether the JSON string should be prettified.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "recipients": {
                                    "description": "The list of the recipients of the alert by SMS",
                                    "type": "array",
                                    "items": "string",
                                    "default": [
                                    ]
                                }
                            }
                        },
                        "withSmtp": {
                            "description": "Whether and how send the alert by email.",
                            "type": "object",
                            "properties": {
                                "default": {
                                    "description": "Whether publishing alerts by email is a default of the 'ttp.pl alert' command.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "enabled": {
                                    "description": "Whether publishing alerts by email is an enabled capability of the site.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "command": {
                                    "description_array": [
                                        "The command to be used to send the alert by email.",
                                        "The command has access to additional macros:",
                                        "- <RECIPIENTS> is resolved with a comma-separated list of the recipients,",
                                        "- <CONTENTFNAME> is the filename of a text file which contains the full message."
                                    ],
                                    "type": [
                                        "string",
                                        "object"
                                    ],
                                    "default": "smtp.pl send -to <RECIPIENTS> -subject \"<TITLE>\" -text \"<MESSAGE>\" <OPTIONS>"
                                },
                                "prefixTitle": {
                                    "description": "Whether to build the email subject as '[<LEVEL>] Alert - <TITLE>'.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "prettyJson": {
                                    "description": "Whether the JSON string should be prettified.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "recipients": {
                                    "description": "The list of the recipients of the alert email",
                                    "type": "array",
                                    "items": "string",
                                    "default": [
                                        "root@localhost"
                                    ]
                                }
                            }
                        }
                    }
                },
                "copyDir": {
                    "description_array": [
                        "The command used by TheToolsProject each time a tree of directories must be copied from a source to a target.",
                        "This can be either a simple command string or a byOS command.",
                        "Please note that, as the default 'File::Copy::Recursive::dircopy()' is less than efficient when managing exclusions,",
                        "all directory copies requiring some exclusions will make use of File::Copy::Recursive::fcopy().",
                        "We strongly suggest to use 'ttp.pl copydirs' each time you can as the command manages both full logs and these properties."
                    ],
                    "type": "object",
                    "properties": {
                        "command": {
                            "description": "The command to be used to copy a directory, either as a string or a 'byOS' object.",
                            "type": [
                                "object",
                                "string"
                            ],
                            "properties": {
                                "byOS": {
                                    "description": "Let a command be specific to the running OS.",
                                    "type": "object",
                                    "patternProperties": {
                                        "^.*$": {
                                            "description_array": [
                                                "The OS name as reported by Perl-Config, the value being the command to be applied for this OS.",
                                                "The value (the command) honors <SOURCE>, <TARGET> <EXCLUDEDIRS>>, <EXCLUDEFILES> and <OPTIONS> macros."
                                            ],
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "default": "File::Copy::Recursive::dircopy()"
                        },
                        "before": {
                            "description": "Whether 'ttp.pl copydirs' default to empty the target tree before the copy.",
                            "type": "object",
                            "properties": {
                                "emptyTarget": {
                                    "description": "Default value of 'ttp.pl copydirs' command.",
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    }
                },
                "copyFile": {
                    "description_array": [
                        "The command used by TheToolsProject each time a file must be copied from a source to a target.",
                        "This can be either a simple command string or a byOS command."
                    ],
                    "type": "object",
                    "properties": {
                        "command": {
                            "description": "The command to be used.",
                            "type": [
                                "object",
                                "string"
                            ],
                            "properties": {
                                "byOS": {
                                    "description": "Let a command be specific to the running OS.",
                                    "type": "object",
                                    "patternProperties": {
                                        "^.*$": {
                                            "description_array": [
                                                "The OS name as reported by Perl-Config, the value being the command to be applied for this OS.",
                                                "The value (the command) honors following macros:",
                                                "- <SOURCE> the source volume, directory and filename,",
                                                "- <SOURCEDIR> the source volume and directory,",
                                                "- <SOURCEFILE> the source filename,",
                                                "- <TARGET> the target volume, directory and filename,",
                                                "- <TARGETDIR> the target volume and directory",
                                                "- <TARGETFILE> the target filename",
                                                "- <OPTIONS> the options provided to the command."
                                            ],
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "default": "File::Copy::copy()"
                        }
                    }
                },
                "credentialsDirs": {
                    "description": "The list of subdirectories of TTP_ROOTS trees where we search for credentials. Deprecated in favor of 'credentials.dirs' in v4.7.",
                    "deprecated": true
                },
                "credentials": {
                    "description": "The configuration of the credentials.",
                    "type": "object",
                    "properties": {
                        "dirs": {
                            "description": "The list of subdirectories of TTP_ROOTS trees where we search for credentials.",
                            "type": "array",
                            "items": "string",
                            "default": [
                                "etc/credentials",
                                "credentials",
                                "etc/private",
                                "private"
                            ]
                        }
                    }
                },
                "daemons": {
                    "description": "The common configuration of the daemons.",
                    "type": "object",
                    "properties": {
                        "confDirs": {
                            "description": "The list of subdirectories of TTP_ROOTS trees where we search for daemons JSON configurations.",
                            "type": "array",
                            "items": "string",
                            "default": [
                                "etc/daemons",
                                "daemons"
                            ]
                        },
                        "execDirs": {
                            "description": "The list of subdirectories of TTP_ROOTS trees where we search for daemons executables.",
                            "type": "array",
                            "items": "string",
                            "default": [
                                "libexec/daemons"
                            ]
                        }
                    }

                },
                "deployments": {
                    "description_array": [
                        "When deploying from a development TTP layer to a pull reference, and from this pull reference to other machines of the parc.",
                        "The commands 'ttp.pl push' and 'ttp.pl pull' internally make use of 'ttp.pl copydirs' excluding .git files and directory."
                    ],
                    "type": "object",
                    "properties": {
                        "trees": {
                            "description": "The list of involved trees to be deployed everywhere on the parc.",
                            "type": "array",
                            "items": "object",
                            "properties": {
                                "source": {
                                    "description": "The path of the source tree.",
                                    "type": "string"
                                },
                                "target": {
                                    "description": "The path of the target tree.",
                                    "type": "string"
                                },
                                "git-check": {
                                    "description": "Whether this source tree is a git repository to be checked before trying to push it.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "git-tag": {
                                    "description": "Whether this source tree is a git repository to be tagged after having pushed it.",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "reference": {
                            "description": "The name of the node which acts as the pull reference",
                            "type": "string"
                        },
                        "excludeDirs": {
                            "description": "The default list of directory globs to exclude from the deployment, can be overriden in 'ttp.pl push' command.",
                            "type": "array",
                            "items": "string",
                            "default": []
                        },
                        "excludeFiles": {
                            "description": "The default list of file globs to exclude from the deployment, can be overriden in 'ttp.pl push' command.",
                            "type": "array",
                            "items": "string",
                            "default": []
                        }
                    }
                },
                "logs": {
                    "description": "The logs and messages configurations.",
                    "type": "object",
                    "properties": {
                        "commandsDir": {
                            "description_array": [
                                "The periodic directory where TTP writes commands and verbs logs.",
                                "This 'logs.commandsDir' directory can be got by the user via the 'ttp.pl vars --logsCommands' command"
                            ],
                            "type": "string",
                            "default": "[eval:TTP::logsPeriodic()]"
                        },
                        "periodicDir": {
                            "description_array": [
                                "The periodic, by time, root directory of the logs tree.",
                                "Rationale: having a per-day or per-week or per-month logs tree is the easiest way in order to periodically purge the logs.",
                                "This is not mandatory at all, and the default is to stick to the 'logs.rootDir' value",
                                "This 'logs.periodicDir' directory can be got by the user via the 'ttp.pl vars --logsPeriodic' command"
                            ],
                            "type": "string",
                            "default": "[eval:TTP::logsRoot()]"
                        },
                        "rootDir": {
                            "description_array": [
                                "The root directory of the logs tree.",
                                "This 'logs.rootDir' directory can be got by the user via the 'ttp.pl vars --logsRoot' command."
                            ],
                            "type": "string",
                            "default": "[eval:TTP::tempDir()]"
                        }
                    }
                },
                "logsCommands": {
                    "description": "The periodic directory where TTP writes commands and verbs logs. Deprecated in favor of 'logs.commandsDir' in v4.7.",
                    "deprecated": true
                },
                "logsDaily": {
                    "description": "The periodic, by time, root directory of the logs tree. Deprecated in favor of 'logs.periodicDir' in v4.7.",
                    "deprecated": true
                },
                "logsRoot": {
                    "description": "The root directory of the logs tree. Deprecated in favor of 'logs.rootDir' in v4.7.",
                    "deprecated": true
                },
                "MQTTGateway": {
                    "description_array": [
                        "Address the MQTT gateway (aka the MQTT broker) to be able to publish our topics.",
                        "If needed, username and password are managed through the credentials usual way.",
                        "The credentials are expected to be found in 'credentials.dirs/site.json', with a schema like:",
                        "    \"MQTTGateway\": {",
                        "        \"11.12.13.14:1883\": {",
                        "            \"username\": \"myUsername\",",
                        "            \"password\": \"myPassword\"",
                        "        }",
                        "    }",
                        "and may be got with \"TTP::Credentials::get([ 'MQTTGateway', $broker, 'username' ]);\" sentence."
                    ],
                    "type": "object",
                    "properties": {
                        "broker": {
                            "description": "The name or the IP address of the broker. Deprecated in favor of 'host' in v4.2.",
                            "deprecated": true
                        },
                        "host": {
                            "description": "The address name or IP, possibly with a colon and a port number, of the broker.",
                            "type": "string",
                            "default": "localhost"
                        },
                        "port": {
                            "description": "The broker port number to connect to. Deprecated in favor of 'host' in v4.7",
                            "deprecated": true
                        }
                    }
                },
                "nodes": {
                    "description": "General configuration of the nodes.",
                    "type": "object",
                    "properties": {
                        "confDirs": {
                            "description": "List of subdirectories of TTP_ROOTS where we can find nodes JSON configuration files. Not per-node overidable.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "etc/nodes",
                                "etc/machines"
                            ]
                        },
                        "dirs": {
                            "description": "List of subdirectories of TTP_ROOTS where we can find nodes JSON configuration files. Deprecated in favor of 'nodes.confDirs' in v4.7.",
                            "deprecated": true
                        },
                        "hostname": {
                            "description": "How to get the hostname of a machine.",
                            "type": "object",
                            "properties": {
                                "short": {
                                    "description": "Whether we want a short hostname, defaulting to keep the machine hostname as set by the administrator.",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "logicals": {
                            "description": "The properties needed to manage the logical machines. Not per-node overidable.",
                            "type": "object",
                            "properties": {
                                "regexp": {
                                    "description_array": [
                                        "A regular expression or a list of the regular expressions the mounted filesystems must match to identify a logical machine.",
                                        "Regular expressions should be anchored and identify the first mount point.",
                                        "",
                                        "Example:",
                                        "   \"regexp\": \"^/(ne.*)$|^/(bo.*)$\""
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "nodesDirs": {
                    "descriptions": "List of subdirectories of TTP_ROOTS where we can find nodes JSON configuration files. Deprecated in favor of 'nodes.dirs' in v4.1.",
                    "deprecated": true
                },
                "SMTPGateway": {
                    "description_array": [
                        "'smtp.pl send' command needs a MTA to proceed to emails sending.",
                        "Default is to rely on a local MTA.",
                        "In the case of the lack of a local MTA, you have to configure the SMTP gateway here.",
                        "If needed, username and password are managed through the credentials usual way."
                    ],
                    "type": "object",
                    "properties": {
                        "host": {
                            "description": "The MTA, defaulting to localhost.",
                            "type": "string",
                            "default": "localhost"
                        },
                        "port": {
                            "description_array": [
                                "The remote port.",
                                "Please note that our code tries to use suitable defaults depending of the used protocol, or tries to choose the better protocol depending of the specified port."
                            ],
                            "type": "integer",
                            "default": 22
                        },
                        "debug": {
                            "description": "Whether to have debug traces from the perl Email module.",
                            "type": "boolean",
                            "default": false
                        },
                        "security": {
                            "description": "The preferred security protocol. May be 'ssl' or 'starttls'. Most often a suitable default can be computed from the port number.",
                            "type": "string"
                        },
                        "timeout": {
                            "description": "The timeout (in sec.) of the connection to the MTA.",
                            "type": "integer",
                            "default": 60
                        },
                        "helo": {
                            "description": "The HELO message.",
                            "type": "string",
                            "default": "current execution node"
                        },
                        "mailfrom": {
                            "description": "Default email emitter.",
                            "type": "string",
                            "default": "No Reply <no-reply@localhost>"
                        }
                    }
                },
                "Telemetry": {
                    "description": "The configuration of the telemetry. Deprecated in favor of 'telemetry' in v4.5.",
                    "deprecated": true
                },
                "telemetry": {
                    "description_array": [
                        "Starting with its v3.0 version, TheToolsProject has chosen Prometheus ecosystem to host its telemetry, while keeping the capability",
                        "to have a messaging-based (MQTT) telemetry. Prometheus let us sent our telemetry either via the PushGateway or via the TextFileCollector.",
                        "These three medias are both configurable here."
                    ],
                    "type": "object",
                    "properties": {
                        "withMqtt": {
                            "description": "The messaging-based configuration of the telemetry.",
                            "type": "object",
                            "properties": {
                                "default": {
                                    "description": "Whether the messaging-based telemetry is a default of the 'telemetry.pl publish' command.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "command": {
                                    "description": "The command to be run to publish a telemetry on the MQTT bus.",
                                    "type": [
                                        "object",
                                        "string"
                                    ],
                                    "properties": {
                                        "byOS": {
                                            "description": "Let a command be specific to the running OS.",
                                            "type": "object",
                                            "patternProperties": {
                                                "^.*$": {
                                                    "description": "The OS name as reported by Perl-Config, the value being the command to be applied for this OS.",
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "withHttp": {
                            "description": "The HTTP-based configuration of the telemetry.",
                            "type": "object",
                            "properties": {
                                "default": {
                                    "description": "Whether the HTTP-based telemetry is a default of the 'telemetry.pl publish' command.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "url": {
                                    "description": "The based URL of the HTTP PushGateway.",
                                    "type": "string"
                                }
                            }
                        },
                        "withText": {
                            "description": "The text-based configuration of the telemetry.",
                            "type": "object",
                            "properties": {
                                "default": {
                                    "description": "Whether the text-based telemetry is a default of the 'telemetry.pl publish' command.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "url": {
                                    "description": "The based URL of the HTTP PushGateway.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
